{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nexport var timeoutProvider = {\n  setTimeout: function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var delegate = timeoutProvider.delegate;\n    return ((delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) || setTimeout).apply(void 0, __spreadArray([], __read(args)));\n  },\n  clearTimeout: function (handle) {\n    var delegate = timeoutProvider.delegate;\n    return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);\n  },\n  delegate: undefined\n};","map":{"version":3,"mappings":";AAcA,OAAO,IAAMA,eAAe,GAAoB;AAG9CC,YAAU;AAAC;;SAAA,yCAAO;AAAPC;;;AACD,gBAAQ,GAAKF,eAAe,SAA5B;AACR,WAAO,CAAC,SAAQ,SAAR,YAAQ,WAAR,GAAQ,MAAR,WAAQ,CAAEC,UAAV,KAAwBA,UAAzB,EAAoCE,KAApC,CAAoC,MAApC,EAAoCC,yBAAIF,IAAJ,EAApC,CAAP;AACD,GAN6C;AAO9CG,cAAY,YAACC,MAAD,EAAO;AACT,gBAAQ,GAAKN,eAAe,SAA5B;AACR,WAAO,CAAC,SAAQ,SAAR,YAAQ,WAAR,GAAQ,MAAR,WAAQ,CAAEK,YAAV,KAA0BA,YAA3B,EAAyCC,MAAzC,CAAP;AACD,GAV6C;AAW9CC,UAAQ,EAAEC;AAXoC,CAAzC","names":["timeoutProvider","setTimeout","args","apply","__spreadArray","clearTimeout","handle","delegate","undefined"],"sources":["C:\\Users\\ASMAE\\Desktop\\portfoliopro\\client\\node_modules\\rxjs\\src\\internal\\scheduler\\timeoutProvider.ts"],"sourcesContent":["type SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => number;\ntype ClearTimeoutFunction = (handle: number) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(...args) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.setTimeout || setTimeout)(...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle);\n  },\n  delegate: undefined,\n};\n"]},"metadata":{},"sourceType":"module"}